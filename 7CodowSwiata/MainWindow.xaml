<Window x:Class="_7CodowSwiata.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:types="clr-namespace:SevenWondersCommon;assembly=SevenWondersCommon" 
        xmlns:controls="clr-namespace:_7CodowSwiata.Controls" 
        xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" 
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        mc:Ignorable="d ignore"
        Height="900"
        Width="1200"
        Title="MVVM Light Application"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        WindowState="Maximized" Background="AntiqueWhite" x:Name="GameMainWindow">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <DockPanel.Background>
            <ImageBrush ImageSource="{Binding Gracz.Miasto.Obrazek}" Stretch="Uniform" Opacity=".7"/>
        </DockPanel.Background>
        <StackPanel DockPanel.Dock="Top" Background="Transparent">
            <ListBox ItemsSource="{Binding Gracze}" ItemTemplate="{StaticResource PrzeciwnikTemplate}" Background="Transparent" BorderThickness="0">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </StackPanel>
        <StackPanel DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
            <controls:DragAndDropContainer 
                AllowDrop="True" 
                AllowDrag="True" 
                DDEffects="Move" 
                DragData="{Binding ZaznaczonaKarta, Mode=OneWay}"
                DropDataTemplate="{StaticResource KartaDuzaTemplate}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="BeforeDrag">
                        <cmd:EventToCommand Command="{Binding Mode=OneTime, Path=BeforeDragListaCommand}" EventArgsConverter="{StaticResource BeforeDragEventArgsConverter}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="AfterDrag">
                        <cmd:EventToCommand Command="{Binding Mode=OneTime, Path=AfterDragListaCommand}" EventArgsConverter="{StaticResource AfterDragEventArgsConverter}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Drop">
                        <cmd:EventToCommand Command="{Binding Mode=OneTime, Path=DropListaCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBox ItemsSource="{Binding Karty}" 
                         Background="Transparent" 
                         BorderThickness="0" 
                         HorizontalAlignment="Center" 
                         SelectedItem="{Binding ZaznaczonaKarta}"
                         ItemTemplate="{StaticResource KartaDuzaTemplate}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </controls:DragAndDropContainer>
        </StackPanel>
        <StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <controls:DragAndDropContainer AllowDrop="True" DDEffects="Move" 
                                               DragData="{Binding RelativeSource={RelativeSource Self}, Path=DropData, Mode=OneWay}"
                                               AllowDrag="{Binding TypRuchu, 
                                        Converter={StaticResource TypRuchuToBoolConverter}, 
                                        ConverterParameter={x:Static types:TypRuchu.Budowa}, 
                                        Mode=OneWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="BeforeDrag">
                            <cmd:EventToCommand Command="{Binding Mode=OneTime, Path=BeforeDragKartaCommand}" EventArgsConverter="{StaticResource BeforeDragEventArgsConverter}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="AfterDrag">
                            <cmd:EventToCommand Command="{Binding Mode=OneTime, Path=AfterDragKartaCommand}" EventArgsConverter="{StaticResource AfterDragEventArgsConverter}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Drop">
                            <cmd:EventToCommand Command="{Binding Mode=OneTime, Path=DropKartaCommand}" CommandParameter="{x:Static types:TypRuchu.Budowa}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Rectangle Width="{StaticResource cardw}" Height="{StaticResource cardh}" Stroke="Black" StrokeThickness="1" RadiusX="10" RadiusY="10">
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TypRuchu, 
                                        Converter={StaticResource TypRuchuToBoolConverter}, 
                                        ConverterParameter={x:Static types:TypRuchu.Budowa}, 
                                        Mode=OneWay}" 
                                        Value="True">
                                        <Setter Property="Fill">
                                            <Setter.Value>
                                                <ImageBrush ImageSource="{Binding AktualnieWybranaKarta.Obrazek, FallbackValue={StaticResource build}}"
                                                    Stretch="Uniform" AlignmentX="Center" AlignmentY="Center"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TypRuchu, 
                                        Converter={StaticResource TypRuchuToBoolConverter}, 
                                        ConverterParameter={x:Static types:TypRuchu.Budowa}, 
                                        Mode=OneWay}" 
                                        Value="False">
                                        <Setter Property="Fill">
                                            <Setter.Value>
                                                <ImageBrush ImageSource="{StaticResource build}" Opacity=".7" Stretch="Uniform" AlignmentX="Center" AlignmentY="Center">
                                                    <ImageBrush.Transform>
                                                        <ScaleTransform ScaleX=".5" ScaleY=".5" CenterX="70" CenterY="105"/>
                                                    </ImageBrush.Transform>
                                                </ImageBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                </controls:DragAndDropContainer>
                <controls:DragAndDropContainer AllowDrop="True" DDEffects="Move" 
                                               DragData="{Binding RelativeSource={RelativeSource Self}, Path=DropData, Mode=OneWay}"
                                               AllowDrag="{Binding TypRuchu, 
                                        Converter={StaticResource TypRuchuToBoolConverter}, 
                                        ConverterParameter={x:Static types:TypRuchu.Sprzedaz}, 
                                        Mode=OneWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="BeforeDrag">
                            <cmd:EventToCommand Command="{Binding Mode=OneTime, Path=BeforeDragKartaCommand}" EventArgsConverter="{StaticResource BeforeDragEventArgsConverter}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="AfterDrag" >
                            <cmd:EventToCommand Command="{Binding Mode=OneTime, Path=AfterDragKartaCommand}" EventArgsConverter="{StaticResource AfterDragEventArgsConverter}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Drop">
                            <cmd:EventToCommand Command="{Binding Mode=OneTime, Path=DropKartaCommand}" CommandParameter="{x:Static types:TypRuchu.Sprzedaz}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Rectangle Width="{StaticResource cardw}" Height="{StaticResource cardh}" 
                               Stroke="Black" StrokeThickness="1" RadiusX="10" RadiusY="10">
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TypRuchu, 
                                        Converter={StaticResource TypRuchuToBoolConverter}, 
                                        ConverterParameter={x:Static types:TypRuchu.Sprzedaz}, 
                                        Mode=OneWay}" 
                                        Value="True">
                                        <Setter Property="Fill">
                                            <Setter.Value>
                                                <ImageBrush ImageSource="{Binding AktualnieWybranaKarta.Obrazek, FallbackValue={StaticResource sale}}" 
                                                    Stretch="Uniform" AlignmentX="Center" AlignmentY="Center"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding TypRuchu, 
                                        Converter={StaticResource TypRuchuToBoolConverter}, 
                                        ConverterParameter={x:Static types:TypRuchu.Sprzedaz}, 
                                        Mode=OneWay}" 
                                        Value="False">
                                        <Setter Property="Fill">
                                            <Setter.Value>
                                                <ImageBrush ImageSource="{StaticResource sale}" Opacity=".7" Stretch="Uniform" AlignmentX="Center" AlignmentY="Center">
                                                    <ImageBrush.Transform>
                                                        <ScaleTransform ScaleX=".5" ScaleY=".5" CenterX="70" CenterY="105"/>
                                                    </ImageBrush.Transform>
                                                </ImageBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                </controls:DragAndDropContainer>
            </StackPanel>
        </StackPanel>
    </DockPanel>
</Window>
